;; FIXME: Better (recursive?) implementation with arbitrary args?
;; Maybe just use conses?
def record1 fn (a x) x a .
def record2 fn (a b x) cons .
def record3 fn (a b c x) x a b c .
def record4 fn (a b c d x) x a b c d .
def record5 fn (a b c d e x) x a b c d e .
def record6 fn (a b c d e f x) x a b c d e f .
def record7 fn (a b c d e f g x) x a b c d e f g .

def record1.0 fn (r) r identity .
def record2.0 fn (r) r (fn (a b) a) .
def record2.1 fn (r) r (fn (a b) b) .
def record3.0 fn (r) r (fn (a b c) a) .
def record3.1 fn (r) r (fn (a b c) b) .
def record3.2 fn (r) r (fn (a b c) c) .
def record4.0 fn (r) r (fn (a b c d) a) .
def record4.1 fn (r) r (fn (a b c d) b) .
def record4.2 fn (r) r (fn (a b c d) c) .
def record4.3 fn (r) r (fn (a b c d) d) .
def record5.0 fn (r) r (fn (a b c d e) a) .
def record5.1 fn (r) r (fn (a b c d e) b) .
def record5.2 fn (r) r (fn (a b c d e) c) .
def record5.3 fn (r) r (fn (a b c d e) d) .
def record5.4 fn (r) r (fn (a b c d e) e) .
def record6.0 fn (r) r (fn (a b c d e f) a) .
def record6.1 fn (r) r (fn (a b c d e f) b) .
def record6.2 fn (r) r (fn (a b c d e f) c) .
def record6.3 fn (r) r (fn (a b c d e f) d) .
def record6.4 fn (r) r (fn (a b c d e f) e) .
def record6.5 fn (r) r (fn (a b c d e f) f) .
def record7.0 fn (r) r (fn (a b c d e f g) a) .
def record7.1 fn (r) r (fn (a b c d e f g) b) .
def record7.2 fn (r) r (fn (a b c d e f g) c) .
def record7.3 fn (r) r (fn (a b c d e f g) d) .
def record7.4 fn (r) r (fn (a b c d e f g) e) .
def record7.5 fn (r) r (fn (a b c d e f g) f) .
def record7.6 fn (r) r (fn (a b c d e f g) g) .