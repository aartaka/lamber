def iscontrol fn (c)
  or (char= c 127) (< c ' ') .

alias isControl iscontrol .
alias controlp iscontrol .
alias control? iscontrol .

;; Yes, it's imperfect.
;; Needs Unicode support and more elegant implementation.
def isspace fn (c)
  local %isspace = fn l
    if (null l)
    then false
    else or (char= c (car l)) (%isspace (cdr l))
  end
  %isspace [' ' '\n' '\t' '\r']
end

alias spacep isspace .
alias space? isspace .
alias whitespacep isspace .
alias whitespace? isspace .
alias isSpace isspace .

;; Only English/Latin ASCII letters
def islower fn (c)
  or (between 97 122 c)
     (or (between 223 246 c)
         (between 248 255 c)) .

alias isLower islower .
alias lowercasep islower .
alias lowercase? islower .

def isupper fn (c)
  or (between 65 90 c)
     (or (between 192 214 c)
         (between 216 222 c)) .

alias isUpper isupper .
alias uppercasep isupper .
alias uppercase? isupper .

def isalpha fn (c)
  or : islower c
     : isupper c .

alias alphap isalpha .
alias isAlpha isalpha .

def isdigit fn (c)
  between '0' '9' c .

alias isDigit isdigit .
alias digitp isdigit .
alias digit? isdigit .

def isoctdigit fn (c)
  between '0' '7' c .

alias isOctDigit isoctdigit .

def ishexdigit fn (c)
  or (isdigit c)
     (or (between 'A' 'F' c)
         (between 'a  'f' c)) .

alias isHexDigit ishexdigit .

def isalnum fn (c)
  or : isalpha c
     : isdigit c .

alias alphanumericp isalnum .
alias alphanumeric? isalnum .
alias isAlphaNum isalnum .

def isascii fn (c)
  < c 128 .

alias isAscii isascii .
alias asciip isascii .
alias ascii? isascii .

def islatin1 fn (c)
  < c 256 .

alias isLatin1 islatin1 .
alias latin1p islatin1 .
alias latin1? islatin1 .

def isasciiupper fn (c)
  and : isupper c
      : isascii c .

def isasciilower fn (c)
  and : islower c
      : isascii c .

def tolower fn (c)
   + c (if (between 'A' 'Z' c)
         then - 'a' 'A'
        else if (between 'À' 'Þ' c)
         then - 'à' 'À'
        else 0)
end

def toupper fn (c)
   - c (if (between 'a' 'z' c)
         then - 'a' 'A'
        else if (between 'à' 'þ' c)
         then - 'à' 'À'
        else 0)
end

def digittoint fn (c)
  if (between '0' '9' c)
   then - c 48
  else if (between 'A' 'F' c)
   then - c 55
  else if (between 'a' 'f' c)
   then - c 87
  else
   0
end

def inttodigit fn (i)
  if (between 0 9 i)
   then + i 48
  else if (between 10 15 i)
   then + i 55
  else
   0
end